(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{376:function(v,_,l){"use strict";l.r(_);var t=l(42),i=Object(t.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h3",{attrs:{id:"http-历史版本简要"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#http-历史版本简要"}},[v._v("#")]),v._v(" HTTP 历史版本简要")]),v._v(" "),l("ul",[l("li",[l("strong",[v._v("HTTP/0.9")]),v._v(" "),l("ul",[l("li",[v._v("非常简单，纯文本")]),v._v(" "),l("li",[v._v("最初版本认为所有服务端文档应该只是只读，所以只有 GET 方法")])])]),v._v(" "),l("li",[l("strong",[v._v("HTTP/1.0(只是一个参考文档，并不是标准)")]),v._v(" "),l("ul",[l("li",[v._v("新增 POST, HEAD 方法")]),v._v(" "),l("li",[v._v("支持多种格式数据传输，不仅仅文本")]),v._v(" "),l("li",[v._v("新增响应状态码，标记错误")]),v._v(" "),l("li",[v._v("引入请求头部(header)概念")]),v._v(" "),l("li",[v._v("引入协议版本号概念")])])]),v._v(" "),l("li",[l("strong",[v._v("HTTP/1.1(正式标准，现在依然大规模使用)")]),v._v(" "),l("ul",[l("li",[v._v("新增 DELETE, PUT 等方法")]),v._v(" "),l("li",[v._v("增加缓存机制")]),v._v(" "),l("li",[v._v("可以保持持久连接(keep-alive)")]),v._v(" "),l("li",[v._v("数据可以分块传输")]),v._v(" "),l("li",[v._v("强制要求 Host 头，让互联网主机托管成为可能")])])]),v._v(" "),l("li",[l("strong",[v._v("HTTP/2")]),v._v(" "),l("ul",[l("li",[v._v("二进制协议，不再传输文本")]),v._v(" "),l("li",[v._v("可发起多个请求，不需要像 1.1 管道堵塞")]),v._v(" "),l("li",[v._v("通过压缩头部，减小请求量")]),v._v(" "),l("li",[v._v("服务器可以主动发送信息给客户端")]),v._v(" "),l("li",[v._v("增加了安全性")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);