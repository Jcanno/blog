(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{359:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript中的原型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的原型"}},[t._v("#")]),t._v(" JavaScript中的原型")]),t._v(" "),s("h3",{attrs:{id:"原型本质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型本质"}},[t._v("#")]),t._v(" 原型本质")]),t._v(" "),s("p",[t._v("原型本质是一个对象，在JavaScript中原型中的属性和方法被用作共享，更明确的说，原型是一个「描述一个类共性的属性和方法」的"),s("code",[t._v("对象")]),t._v("，同时也是继承的基础。")]),t._v(" "),s("h3",{attrs:{id:"原型的获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型的获取"}},[t._v("#")]),t._v(" 原型的获取")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("获取对象上原型")]),t._v(" "),s("ol",[s("li",[t._v("隐式获取")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("显式获取")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("对象上获取原型实际上获取的是该对象构造函数上的原型对象")]),t._v(" "),s("p",[s("code",[t._v("__proto__")]),t._v("是历史原因的产物，原因在于各大浏览器在规范前实现了通过"),s("code",[t._v("__proto__")]),t._v("获取原型的功能，以至于ES2015不得不将"),s("code",[t._v("__proto__")]),t._v("纳入规范，现在我们可以直接获取或修改"),s("code",[t._v("__proto__")]),t._v("来操作原型对象，"),s("code",[t._v("__proto__")]),t._v("实际上还是在隐式的调用"),s("code",[t._v("Object.prototype")]),t._v("上的"),s("code",[t._v("__proto__")]),t._v("的"),s("code",[t._v("get、set")]),t._v("方法")])]),t._v(" "),s("li",[s("p",[t._v("获取函数原型")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("函数A不仅有"),s("code",[t._v("__proto__")]),t._v("，还有"),s("code",[t._v("prototype")]),t._v("(原型属性)获取该函数的原型对象，原型对象上有一个"),s("code",[t._v("constructor")]),t._v("属性，指向原来的构造函数。\n描述不同类型的构造函数它的"),s("code",[t._v("prototype")]),t._v("类型也不同，例如"),s("code",[t._v("Object.prototype")]),t._v("为对象类型、"),s("code",[t._v("Array.prototype")]),t._v("为数组类型、"),s("code",[t._v("Function.prototype")]),t._v("为函数类型。")])])]),t._v(" "),s("h3",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("p",[t._v("原型对象上它也有原型对象，"),s("code",[t._v("Object.prototype")]),t._v("的原型对象即"),s("code",[t._v("__proto__")]),t._v("为null。原型对象的嵌套行为就构成了原型链，对象在查找属性或方法时就是按照"),s("code",[t._v("自身属性->原型对象->...->null")]),t._v("原型链的方式查找。")])])}),[],!1,null,null,null);a.default=e.exports}}]);